{
  "swagger": "2.0",
  "info": {
    "title": "Cloud Storage API",
    "x-serviceName": "storage",
    "description": "Lets you store and retrieve potentially-large, immutable data objects.",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "version": "v1beta2",
    "x-providerName": "googleapis.com",
    "x-origin": {
      "format": "google",
      "version": "v1",
      "url": "https://www.googleapis.com/discovery/v1/apis/storage/v1beta2/rest"
    },
    "x-logo": "https://www.google.com/images/srpr/logo11w.png"
  },
  "host": "www.googleapis.com",
  "basePath": "/storage/v1beta2",
  "schemes": [
    "https"
  ],
  "paths": {
    "/b/{bucket}/acl/{entity}": {
      "delete": {
        "description": "Permanently deletes the ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.bucketAccessControls.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "get": {
        "description": "Returns the ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.bucketAccessControls.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "patch": {
        "description": "Updates an ACL entry on the specified bucket. This method supports patch semantics.",
        "operationId": "storage.bucketAccessControls.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "put": {
        "description": "Updates an ACL entry on the specified bucket.",
        "operationId": "storage.bucketAccessControls.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/acl": {
      "post": {
        "description": "Creates a new ACL entry on the specified bucket.",
        "operationId": "storage.bucketAccessControls.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "get": {
        "description": "Retrieves ACL entries on the specified bucket.",
        "operationId": "storage.bucketAccessControls.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControls"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}": {
      "delete": {
        "description": "Permanently deletes an empty bucket.",
        "operationId": "storage.buckets.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "get": {
        "description": "Returns metadata for the specified bucket.",
        "operationId": "storage.buckets.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "patch": {
        "description": "Updates a bucket. This method supports patch semantics.",
        "operationId": "storage.buckets.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "put": {
        "description": "Updates a bucket.",
        "operationId": "storage.buckets.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the return of the bucket metadata conditional on whether the bucket's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b": {
      "post": {
        "description": "Creates a new bucket.",
        "operationId": "storage.buckets.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "description": "A valid API project identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "get": {
        "description": "Retrieves a list of buckets for a given project.",
        "operationId": "storage.buckets.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Buckets"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "query",
            "description": "A valid API project identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of buckets to return.",
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/channels/stop": {
      "post": {
        "description": "Stop watching resources through this channel",
        "operationId": "storage.channels.stop",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "resource",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "channels"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/defaultObjectAcl/{entity}": {
      "delete": {
        "description": "Permanently deletes the default object ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.defaultObjectAccessControls.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "get": {
        "description": "Returns the default object ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.defaultObjectAccessControls.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "patch": {
        "description": "Updates a default object ACL entry on the specified bucket. This method supports patch semantics.",
        "operationId": "storage.defaultObjectAccessControls.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "put": {
        "description": "Updates a default object ACL entry on the specified bucket.",
        "operationId": "storage.defaultObjectAccessControls.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/defaultObjectAcl": {
      "post": {
        "description": "Creates a new default object ACL entry on the specified bucket.",
        "operationId": "storage.defaultObjectAccessControls.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "get": {
        "description": "Retrieves default object ACL entries on the specified bucket.",
        "operationId": "storage.defaultObjectAccessControls.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControls"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "If present, only return default ACL listing if the bucket's current metageneration matches this value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "If present, only return default ACL listing if the bucket's current metageneration does not match the given value.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "defaultObjectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}/acl/{entity}": {
      "delete": {
        "description": "Permanently deletes the ACL entry for the specified entity on the specified object.",
        "operationId": "storage.objectAccessControls.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "get": {
        "description": "Returns the ACL entry for the specified entity on the specified object.",
        "operationId": "storage.objectAccessControls.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "patch": {
        "description": "Updates an ACL entry on the specified object. This method supports patch semantics.",
        "operationId": "storage.objectAccessControls.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "put": {
        "description": "Updates an ACL entry on the specified object.",
        "operationId": "storage.objectAccessControls.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}/acl": {
      "post": {
        "description": "Creates a new ACL entry on the specified object.",
        "operationId": "storage.objectAccessControls.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "get": {
        "description": "Retrieves ACL entries on the specified object.",
        "operationId": "storage.objectAccessControls.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControls"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{destinationBucket}/o/{destinationObject}/compose": {
      "post": {
        "description": "Concatenates a list of existing objects into a new object in the same bucket.",
        "operationId": "storage.objects.compose",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "destinationBucket",
            "in": "path",
            "description": "Name of the bucket in which to store the new object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "destinationObject",
            "in": "path",
            "description": "Name of the new object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ComposeRequest"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{sourceBucket}/o/{sourceObject}/copyTo/b/{destinationBucket}/o/{destinationObject}": {
      "post": {
        "description": "Copies an object to a destination in the same location. Optionally overrides metadata.",
        "operationId": "storage.objects.copy",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "sourceBucket",
            "in": "path",
            "description": "Name of the bucket in which to find the source object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "sourceObject",
            "in": "path",
            "description": "Name of the source object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "destinationBucket",
            "in": "path",
            "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.",
            "required": true,
            "type": "string"
          },
          {
            "name": "destinationObject",
            "in": "path",
            "description": "Name of the new object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the destination object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the destination object's current generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the destination object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the destination object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifSourceGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the source object's generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifSourceGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the source object's generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifSourceMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the source object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifSourceMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the source object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "sourceGeneration",
            "in": "query",
            "description": "If present, selects a specific revision of the source object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}": {
      "delete": {
        "description": "Deletes data blobs and associated metadata. Deletions are permanent if versioning is not enabled for the bucket, or if the generation parameter is used.",
        "operationId": "storage.objects.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, permanently deletes a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "get": {
        "description": "Retrieves objects or their associated metadata.",
        "operationId": "storage.objects.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "patch": {
        "description": "Updates a data blob's associated metadata. This method supports patch semantics.",
        "operationId": "storage.objects.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "put": {
        "description": "Updates a data blob's associated metadata.",
        "operationId": "storage.objects.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "generation",
            "in": "query",
            "description": "If present, selects a specific revision of this object (as opposed to the latest version, the default).",
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o": {
      "post": {
        "description": "Stores new data blobs and associated metadata.",
        "operationId": "storage.objects.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.",
            "required": true,
            "type": "string"
          },
          {
            "name": "ifGenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation matches the given value.",
            "type": "string"
          },
          {
            "name": "ifGenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current generation does not match the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration matches the given value.",
            "type": "string"
          },
          {
            "name": "ifMetagenerationNotMatch",
            "in": "query",
            "description": "Makes the operation conditional on whether the object's current metageneration does not match the given value.",
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl, unless the object resource specifies the acl property, when it defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "get": {
        "description": "Retrieves a list of objects matching the criteria.",
        "operationId": "storage.objects.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Objects"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which to look for objects.",
            "required": true,
            "type": "string"
          },
          {
            "name": "delimiter",
            "in": "query",
            "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.",
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "Filter results to objects whose names begin with this prefix.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "versions",
            "in": "query",
            "description": "If true, lists all versions of a file as distinct results.",
            "type": "boolean"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/watch": {
      "post": {
        "description": "Watch for changes on all objects in a bucket.",
        "operationId": "storage.objects.watchAll",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which to look for objects.",
            "required": true,
            "type": "string"
          },
          {
            "name": "delimiter",
            "in": "query",
            "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.",
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "Filter results to objects whose names begin with this prefix.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to noAcl.",
            "type": "string",
            "enum": [
              "full",
              "noAcl"
            ]
          },
          {
            "name": "versions",
            "in": "query",
            "description": "If true, lists all versions of a file as distinct results.",
            "type": "boolean"
          },
          {
            "name": "resource",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Channel"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    }
  },
  "definitions": {
    "Bucket": {
      "type": "object",
      "description": "A bucket.",
      "properties": {
        "acl": {
          "type": "array",
          "description": "Access controls on the bucket.",
          "items": {
            "$ref": "#/definitions/BucketAccessControl"
          }
        },
        "cors": {
          "type": "array",
          "description": "The bucket's Cross-Origin Resource Sharing (CORS) configuration.",
          "items": {
            "type": "object",
            "properties": {
              "maxAgeSeconds": {
                "type": "integer",
                "description": "The value, in seconds, to return in the  Access-Control-Max-Age header used in preflight responses.",
                "format": "int32"
              },
              "method": {
                "type": "array",
                "description": "The list of HTTP methods on which to include CORS response headers: GET, OPTIONS, POST, etc. Note, \"*\" is permitted in the list of methods, and means \"any method\".",
                "items": {
                  "type": "string"
                }
              },
              "origin": {
                "type": "array",
                "description": "The list of Origins eligible to receive CORS response headers. Note: \"*\" is permitted in the list of origins, and means \"any Origin\".",
                "items": {
                  "type": "string"
                }
              },
              "responseHeader": {
                "type": "array",
                "description": "The list of HTTP headers other than the simple response headers to give permission for the user-agent to share across domains.",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        },
        "defaultObjectAcl": {
          "type": "array",
          "description": "Default access controls to apply to new objects when no ACL is provided.",
          "items": {
            "$ref": "#/definitions/ObjectAccessControl"
          }
        },
        "etag": {
          "type": "string",
          "description": "HTTP 1.1 Entity tag for the bucket."
        },
        "id": {
          "type": "string",
          "description": "The ID of the bucket."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For buckets, this is always storage#bucket.",
          "default": "storage#bucket"
        },
        "lifecycle": {
          "type": "object",
          "description": "The bucket's lifecycle configuration. See object lifecycle management for more information.",
          "properties": {
            "rule": {
              "type": "array",
              "description": "A lifecycle management rule, which is made of an action to take and the condition(s) under which the action will be taken.",
              "items": {
                "type": "object",
                "properties": {
                  "action": {
                    "type": "object",
                    "description": "The action to take.",
                    "properties": {
                      "type": {
                        "type": "string",
                        "description": "Type of the action. Currently only Delete is supported."
                      }
                    }
                  },
                  "condition": {
                    "type": "object",
                    "description": "The condition(s) under which the action will be taken.",
                    "properties": {
                      "age": {
                        "type": "integer",
                        "description": "Age of an object (in days). This condition is satisfied when an object reaches the specified age.",
                        "format": "int32"
                      },
                      "createdBefore": {
                        "type": "string",
                        "description": "A date in RFC 3339 format with only the date part, e.g. \"2013-01-15\". This condition is satisfied when an object is created before midnight of the specified date in UTC.",
                        "format": "date"
                      },
                      "isLive": {
                        "type": "boolean",
                        "description": "Relevant only for versioned objects. If the value is true, this condition matches live objects; if the value is false, it matches archived objects."
                      },
                      "numNewerVersions": {
                        "type": "integer",
                        "description": "Relevant only for versioned objects. If the value is N, this condition is satisfied when there are at least N versions (including the live version) newer than this version of the object.",
                        "format": "int32"
                      }
                    }
                  }
                }
              }
            }
          }
        },
        "location": {
          "type": "string",
          "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage within this region. Typical values are US and EU. Defaults to US. See the developer's guide for the authoritative list."
        },
        "logging": {
          "type": "object",
          "description": "The bucket's logging configuration, which defines the destination bucket and optional name prefix for the current bucket's logs.",
          "properties": {
            "logBucket": {
              "type": "string",
              "description": "The destination bucket where the current bucket's logs should be placed."
            },
            "logObjectPrefix": {
              "type": "string",
              "description": "A prefix for log object names."
            }
          }
        },
        "metageneration": {
          "type": "string",
          "description": "The metadata generation of this bucket.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "owner": {
          "type": "object",
          "description": "The owner of the bucket. This is always the project team's owner group.",
          "properties": {
            "entity": {
              "type": "string",
              "description": "The entity, in the form group-groupId."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity."
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this bucket."
        },
        "storageClass": {
          "type": "string",
          "description": "The bucket's storage class. This defines how objects in the bucket are stored and determines the SLA and the cost of storage. Typical values are STANDARD and DURABLE_REDUCED_AVAILABILITY. Defaults to STANDARD. See the developer's guide for the authoritative list."
        },
        "timeCreated": {
          "type": "string",
          "description": "Creation time of the bucket in RFC 3339 format.",
          "format": "date-time"
        },
        "versioning": {
          "type": "object",
          "description": "The bucket's versioning configuration.",
          "properties": {
            "enabled": {
              "type": "boolean",
              "description": "While set to true, versioning is fully enabled for this bucket."
            }
          }
        },
        "website": {
          "type": "object",
          "description": "The bucket's website configuration.",
          "properties": {
            "mainPageSuffix": {
              "type": "string",
              "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories."
            },
            "notFoundPage": {
              "type": "string",
              "description": "The custom object to return when a requested resource is not found."
            }
          }
        }
      }
    },
    "BucketAccessControl": {
      "type": "object",
      "description": "An access-control entry.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "domain": {
          "type": "string",
          "description": "The domain associated with the entity, if any."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the entity, if any."
        },
        "entity": {
          "type": "string",
          "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
        },
        "entityId": {
          "type": "string",
          "description": "The ID for the entity, if any."
        },
        "etag": {
          "type": "string",
          "description": "HTTP 1.1 Entity tag for the access-control entry."
        },
        "id": {
          "type": "string",
          "description": "The ID of the access-control entry."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
          "default": "storage#bucketAccessControl"
        },
        "role": {
          "type": "string",
          "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this access-control entry."
        }
      }
    },
    "BucketAccessControls": {
      "type": "object",
      "description": "An access-control list.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/BucketAccessControl"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.",
          "default": "storage#bucketAccessControls"
        }
      }
    },
    "Buckets": {
      "type": "object",
      "description": "A list of buckets.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Bucket"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of buckets, this is always storage#buckets.",
          "default": "storage#buckets"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        }
      }
    },
    "Channel": {
      "type": "object",
      "description": "An notification channel used to watch for resource changes.",
      "properties": {
        "address": {
          "type": "string",
          "description": "The address where notifications are delivered for this channel."
        },
        "expiration": {
          "type": "string",
          "description": "Date and time of notification channel expiration, expressed as a Unix timestamp, in milliseconds. Optional.",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "A UUID or similar unique string that identifies this channel."
        },
        "kind": {
          "type": "string",
          "description": "Identifies this as a notification channel used to watch for changes to a resource. Value: the fixed string \"api#channel\".",
          "default": "api#channel"
        },
        "params": {
          "type": "object",
          "description": "Additional parameters controlling delivery channel behavior. Optional.",
          "additionalProperties": {
            "type": "string",
            "description": "Declares a new parameter by name."
          }
        },
        "payload": {
          "type": "boolean",
          "description": "A Boolean value to indicate whether payload is wanted. Optional."
        },
        "resourceId": {
          "type": "string",
          "description": "An opaque ID that identifies the resource being watched on this channel. Stable across different API versions."
        },
        "resourceUri": {
          "type": "string",
          "description": "A version-specific identifier for the watched resource."
        },
        "token": {
          "type": "string",
          "description": "An arbitrary string delivered to the target address with each notification delivered over this channel. Optional."
        },
        "type": {
          "type": "string",
          "description": "The type of delivery mechanism used for this channel."
        }
      }
    },
    "ComposeRequest": {
      "type": "object",
      "description": "A Compose request.",
      "properties": {
        "destination": {
          "$ref": "#/definitions/Object",
          "description": "Properties of the resulting object"
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is.",
          "default": "storage#composeRequest"
        },
        "sourceObjects": {
          "type": "array",
          "description": "The list of source objects that will be concatenated into a single object.",
          "items": {
            "type": "object",
            "properties": {
              "generation": {
                "type": "string",
                "description": "The generation of this object to use as the source.",
                "format": "int64"
              },
              "name": {
                "type": "string",
                "description": "The source object's name. The source object's bucket is implicitly the destination bucket."
              },
              "objectPreconditions": {
                "type": "object",
                "description": "Conditions that must be met for this operation to execute.",
                "properties": {
                  "ifGenerationMatch": {
                    "type": "string",
                    "description": "Only perform the composition if the generation of the source object that would be used matches this value. If this value and a generation are both specified, they must be the same value or the call will fail.",
                    "format": "int64"
                  }
                }
              }
            }
          }
        }
      }
    },
    "Object": {
      "type": "object",
      "description": "An object.",
      "properties": {
        "acl": {
          "type": "array",
          "description": "Access controls on the object.",
          "items": {
            "$ref": "#/definitions/ObjectAccessControl"
          }
        },
        "bucket": {
          "type": "string",
          "description": "The bucket containing this object."
        },
        "cacheControl": {
          "type": "string",
          "description": "Cache-Control directive for the object data."
        },
        "componentCount": {
          "type": "integer",
          "description": "Number of underlying components that make up this object. Components are accumulated by compose operations and are limited to a count of 32.",
          "format": "int32"
        },
        "contentDisposition": {
          "type": "string",
          "description": "Content-Disposition of the object data."
        },
        "contentEncoding": {
          "type": "string",
          "description": "Content-Encoding of the object data."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Content-Language of the object data."
        },
        "contentType": {
          "type": "string",
          "description": "Content-Type of the object data."
        },
        "crc32c": {
          "type": "string",
          "description": "CRC32c checksum, as described in RFC 4960, Appendix B; encoded using base64."
        },
        "etag": {
          "type": "string",
          "description": "HTTP 1.1 Entity tag for the object."
        },
        "generation": {
          "type": "string",
          "description": "The content generation of this object. Used for object versioning.",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "The ID of the object."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For objects, this is always storage#object.",
          "default": "storage#object"
        },
        "md5Hash": {
          "type": "string",
          "description": "MD5 hash of the data; encoded using base64."
        },
        "mediaLink": {
          "type": "string",
          "description": "Media download link."
        },
        "metadata": {
          "type": "object",
          "description": "User-provided metadata, in key/value pairs.",
          "additionalProperties": {
            "type": "string",
            "description": "An individual metadata entry."
          }
        },
        "metageneration": {
          "type": "string",
          "description": "The generation of the metadata for this object at this generation. Used for metadata versioning. Has no meaning outside of the context of this generation.",
          "format": "int64"
        },
        "name": {
          "type": "string",
          "description": "The name of this object. Required if not specified by URL parameter."
        },
        "owner": {
          "type": "object",
          "description": "The owner of the object. This will always be the uploader of the object.",
          "properties": {
            "entity": {
              "type": "string",
              "description": "The entity, in the form user-userId."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity."
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this object."
        },
        "size": {
          "type": "string",
          "description": "Content-Length of the data in bytes.",
          "format": "uint64"
        },
        "storageClass": {
          "type": "string",
          "description": "Storage class of the object."
        },
        "timeDeleted": {
          "type": "string",
          "description": "Deletion time of the object in RFC 3339 format. Will be returned if and only if this version of the object has been deleted.",
          "format": "date-time"
        },
        "updated": {
          "type": "string",
          "description": "Modification time of the object metadata in RFC 3339 format.",
          "format": "date-time"
        }
      }
    },
    "ObjectAccessControl": {
      "type": "object",
      "description": "An access-control entry.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "domain": {
          "type": "string",
          "description": "The domain associated with the entity, if any."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the entity, if any."
        },
        "entity": {
          "type": "string",
          "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
        },
        "entityId": {
          "type": "string",
          "description": "The ID for the entity, if any."
        },
        "etag": {
          "type": "string",
          "description": "HTTP 1.1 Entity tag for the access-control entry."
        },
        "generation": {
          "type": "string",
          "description": "The content generation of the object.",
          "format": "int64"
        },
        "id": {
          "type": "string",
          "description": "The ID of the access-control entry."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
          "default": "storage#objectAccessControl"
        },
        "object": {
          "type": "string",
          "description": "The name of the object."
        },
        "role": {
          "type": "string",
          "description": "The access permission for the entity. Can be READER or OWNER."
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this access-control entry."
        }
      }
    },
    "ObjectAccessControls": {
      "type": "object",
      "description": "An access-control list.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {}
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.",
          "default": "storage#objectAccessControls"
        }
      }
    },
    "Objects": {
      "type": "object",
      "description": "A list of objects.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Object"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of objects, this is always storage#objects.",
          "default": "storage#objects"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "prefixes": {
          "type": "array",
          "description": "The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "name": "alt",
      "in": "query",
      "description": "Data format for the response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json"
      ]
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "name": "key",
      "in": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "name": "oauth_token",
      "in": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "name": "prettyPrint",
      "in": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": true,
      "type": "boolean"
    },
    "quotaUser": {
      "name": "quotaUser",
      "in": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "type": "string"
    },
    "userIp": {
      "name": "userIp",
      "in": "query",
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "scopes": {
        "https://www.googleapis.com/auth/devstorage.full_control": "Manage your data and permissions in Google Cloud Storage",
        "https://www.googleapis.com/auth/devstorage.read_only": "View your data in Google Cloud Storage",
        "https://www.googleapis.com/auth/devstorage.read_write": "Manage your data in Google Cloud Storage"
      }
    }
  },
  "externalDocs": {
    "url": "https://developers.google.com/storage/docs/json_api/"
  }
}