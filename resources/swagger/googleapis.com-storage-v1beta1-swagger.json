{
  "swagger": "2.0",
  "info": {
    "title": "Cloud Storage API",
    "x-serviceName": "storage",
    "description": "Lets you store and retrieve potentially-large, immutable data objects.",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "version": "v1beta1",
    "x-providerName": "googleapis.com",
    "x-origin": {
      "format": "google",
      "version": "v1",
      "url": "https://www.googleapis.com/discovery/v1/apis/storage/v1beta1/rest"
    },
    "x-logo": "https://www.google.com/images/srpr/logo11w.png"
  },
  "host": "www.googleapis.com",
  "basePath": "/storage/v1beta1",
  "schemes": [
    "https"
  ],
  "paths": {
    "/b/{bucket}/acl/{entity}": {
      "delete": {
        "description": "Deletes the ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.bucketAccessControls.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "get": {
        "description": "Returns the ACL entry for the specified entity on the specified bucket.",
        "operationId": "storage.bucketAccessControls.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "patch": {
        "description": "Updates an ACL entry on the specified bucket. This method supports patch semantics.",
        "operationId": "storage.bucketAccessControls.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "put": {
        "description": "Updates an ACL entry on the specified bucket.",
        "operationId": "storage.bucketAccessControls.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/acl": {
      "post": {
        "description": "Creates a new ACL entry on the specified bucket.",
        "operationId": "storage.bucketAccessControls.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/BucketAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "get": {
        "description": "Retrieves ACL entries on the specified bucket.",
        "operationId": "storage.bucketAccessControls.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/BucketAccessControls"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "bucketAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}": {
      "delete": {
        "description": "Deletes an empty bucket.",
        "operationId": "storage.buckets.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "get": {
        "description": "Returns metadata for the specified bucket.",
        "operationId": "storage.buckets.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "patch": {
        "description": "Updates a bucket. This method supports patch semantics.",
        "operationId": "storage.buckets.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "put": {
        "description": "Updates a bucket.",
        "operationId": "storage.buckets.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b": {
      "post": {
        "description": "Creates a new bucket.",
        "operationId": "storage.buckets.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        },
        "parameters": [
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl, unless the bucket resource specifies acl or defaultObjectAcl properties, when it defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Bucket"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "get": {
        "description": "Retrieves a list of buckets for a given project.",
        "operationId": "storage.buckets.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Buckets"
            }
          }
        },
        "parameters": [
          {
            "name": "projectId",
            "in": "query",
            "description": "A valid API project identifier.",
            "required": true,
            "type": "string"
          },
          {
            "name": "max-results",
            "in": "query",
            "description": "Maximum number of buckets to return.",
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "buckets"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}/acl/{entity}": {
      "delete": {
        "description": "Deletes the ACL entry for the specified entity on the specified object.",
        "operationId": "storage.objectAccessControls.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "get": {
        "description": "Returns the ACL entry for the specified entity on the specified object.",
        "operationId": "storage.objectAccessControls.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "patch": {
        "description": "Updates an ACL entry on the specified object. This method supports patch semantics.",
        "operationId": "storage.objectAccessControls.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "put": {
        "description": "Updates an ACL entry on the specified object.",
        "operationId": "storage.objectAccessControls.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "entity",
            "in": "path",
            "description": "The entity holding the permission. Can be user-userId, user-emailAddress, group-groupId, group-emailAddress, allUsers, or allAuthenticatedUsers.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}/acl": {
      "post": {
        "description": "Creates a new ACL entry on the specified object.",
        "operationId": "storage.objectAccessControls.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControl"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "get": {
        "description": "Retrieves ACL entries on the specified object.",
        "operationId": "storage.objectAccessControls.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ObjectAccessControls"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of a bucket.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control"
            ]
          }
        ],
        "tags": [
          "objectAccessControls"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o/{object}": {
      "delete": {
        "description": "Deletes data blobs and associated metadata.",
        "operationId": "storage.objects.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "get": {
        "description": "Retrieves objects or their associated metadata.",
        "operationId": "storage.objects.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "patch": {
        "description": "Updates a data blob's associated metadata. This method supports patch semantics.",
        "operationId": "storage.objects.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "put": {
        "description": "Updates a data blob's associated metadata.",
        "operationId": "storage.objects.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which the object resides.",
            "required": true,
            "type": "string"
          },
          {
            "name": "object",
            "in": "path",
            "description": "Name of the object.",
            "required": true,
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/b/{bucket}/o": {
      "post": {
        "description": "Stores new data blobs and associated metadata.",
        "operationId": "storage.objects.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        },
        "consumes": [
          "application/octet-stream"
        ],
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which to store the new object. Overrides the provided object metadata's bucket value, if any.",
            "required": true,
            "type": "string"
          },
          {
            "name": "name",
            "in": "query",
            "description": "Name of the object. Required when the object metadata is not otherwise provided. Overrides the object metadata's name value, if any.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl, unless the object resource specifies the acl property, when it defaults to full.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Object"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "get": {
        "description": "Retrieves a list of objects matching the criteria.",
        "operationId": "storage.objects.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Objects"
            }
          }
        },
        "parameters": [
          {
            "name": "bucket",
            "in": "path",
            "description": "Name of the bucket in which to look for objects.",
            "required": true,
            "type": "string"
          },
          {
            "name": "delimiter",
            "in": "query",
            "description": "Returns results in a directory-like mode. items will contain only objects whose names, aside from the prefix, do not contain delimiter. Objects whose names, aside from the prefix, contain delimiter will have their name, truncated after the delimiter, returned in prefixes. Duplicate prefixes are omitted.",
            "type": "string"
          },
          {
            "name": "max-results",
            "in": "query",
            "description": "Maximum number of items plus prefixes to return. As duplicate prefixes are omitted, fewer total results may be returned than requested.",
            "type": "integer",
            "minimum": 0
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "A previously-returned page token representing part of the larger set of results to view.",
            "type": "string"
          },
          {
            "name": "prefix",
            "in": "query",
            "description": "Filter results to objects whose names begin with this prefix.",
            "type": "string"
          },
          {
            "name": "projection",
            "in": "query",
            "description": "Set of properties to return. Defaults to no_acl.",
            "type": "string",
            "enum": [
              "full",
              "no_acl"
            ]
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/devstorage.full_control",
              "https://www.googleapis.com/auth/devstorage.read_only",
              "https://www.googleapis.com/auth/devstorage.read_write"
            ]
          }
        ],
        "tags": [
          "objects"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    }
  },
  "definitions": {
    "Bucket": {
      "type": "object",
      "description": "A bucket.",
      "properties": {
        "acl": {
          "type": "array",
          "description": "Access controls on the bucket.",
          "items": {
            "$ref": "#/definitions/BucketAccessControl"
          }
        },
        "defaultObjectAcl": {
          "type": "array",
          "description": "Default access controls to apply to new objects when no ACL is provided.",
          "items": {
            "$ref": "#/definitions/ObjectAccessControl"
          }
        },
        "id": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For buckets, this is always storage#bucket.",
          "default": "storage#bucket"
        },
        "location": {
          "type": "string",
          "description": "The location of the bucket. Object data for objects in the bucket resides in physical storage in this location. Can be US or EU. Defaults to US."
        },
        "owner": {
          "type": "object",
          "description": "The owner of the bucket. This will always be the project team's owner group.",
          "properties": {
            "entity": {
              "type": "string",
              "description": "The entity, in the form group-groupId."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity."
            }
          }
        },
        "projectId": {
          "type": "string",
          "description": "The project the bucket belongs to.",
          "format": "uint64"
        },
        "selfLink": {
          "type": "string",
          "description": "The URI of this bucket."
        },
        "timeCreated": {
          "type": "string",
          "description": "Creation time of the bucket in RFC 3339 format.",
          "format": "date-time"
        },
        "website": {
          "type": "object",
          "description": "The bucket's website configuration.",
          "properties": {
            "mainPageSuffix": {
              "type": "string",
              "description": "Behaves as the bucket's directory index where missing objects are treated as potential directories."
            },
            "notFoundPage": {
              "type": "string",
              "description": "The custom object to return when a requested resource is not found."
            }
          }
        }
      }
    },
    "BucketAccessControl": {
      "type": "object",
      "description": "An access-control entry.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "domain": {
          "type": "string",
          "description": "The domain associated with the entity, if any."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the entity, if any."
        },
        "entity": {
          "type": "string",
          "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
        },
        "entityId": {
          "type": "string",
          "description": "The ID for the entity, if any."
        },
        "id": {
          "type": "string",
          "description": "The ID of the access-control entry."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For bucket access control entries, this is always storage#bucketAccessControl.",
          "default": "storage#bucketAccessControl"
        },
        "role": {
          "type": "string",
          "description": "The access permission for the entity. Can be READER, WRITER, or OWNER."
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this access-control entry."
        }
      }
    },
    "BucketAccessControls": {
      "type": "object",
      "description": "An access-control list.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/BucketAccessControl"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of bucket access control entries, this is always storage#bucketAccessControls.",
          "default": "storage#bucketAccessControls"
        }
      }
    },
    "Buckets": {
      "type": "object",
      "description": "A list of buckets.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Bucket"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of buckets, this is always storage#buckets.",
          "default": "storage#buckets"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        }
      }
    },
    "Object": {
      "type": "object",
      "description": "An object.",
      "properties": {
        "acl": {
          "type": "array",
          "description": "Access controls on the object.",
          "items": {
            "$ref": "#/definitions/ObjectAccessControl"
          }
        },
        "bucket": {
          "type": "string",
          "description": "The bucket containing this object."
        },
        "cacheControl": {
          "type": "string",
          "description": "Cache-Control directive for the object data."
        },
        "contentDisposition": {
          "type": "string",
          "description": "Content-Disposition of the object data."
        },
        "contentEncoding": {
          "type": "string",
          "description": "Content-Encoding of the object data."
        },
        "contentLanguage": {
          "type": "string",
          "description": "Content-Language of the object data."
        },
        "id": {
          "type": "string",
          "description": "The ID of the object."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For objects, this is always storage#object.",
          "default": "storage#object"
        },
        "media": {
          "type": "object",
          "description": "Object media data. Provided on your behalf when uploading raw media or multipart/related with an auxiliary media part.",
          "properties": {
            "algorithm": {
              "type": "string",
              "description": "Hash algorithm used. Currently only MD5 is supported. Required if a hash is provided.",
              "default": "MD5"
            },
            "contentType": {
              "type": "string",
              "description": "Content-Type of the object data."
            },
            "data": {
              "type": "string",
              "description": "URL-safe Base64-encoded data. This property can be used to insert objects under 64KB in size, and will only be returned in response to the get method for objects so created. When this resource is returned in response to the list method, this property is omitted.",
              "format": "byte"
            },
            "hash": {
              "type": "string",
              "description": "Hash of the data. Required if a hash algorithm is provided."
            },
            "length": {
              "type": "string",
              "description": "Content-Length of the data in bytes.",
              "format": "uint64"
            },
            "link": {
              "type": "string",
              "description": "Media download link."
            },
            "timeCreated": {
              "type": "string",
              "description": "Creation time of the data in RFC 3339 format.",
              "format": "date-time"
            }
          }
        },
        "metadata": {
          "type": "object",
          "description": "User-provided metadata, in key/value pairs.",
          "additionalProperties": {
            "type": "string",
            "description": "An individual metadata entry."
          }
        },
        "name": {
          "type": "string",
          "description": "The name of this object. Required if not specified by URL parameter."
        },
        "owner": {
          "type": "object",
          "description": "The owner of the object. This will always be the uploader of the object.",
          "properties": {
            "entity": {
              "type": "string",
              "description": "The entity, in the form user-userId."
            },
            "entityId": {
              "type": "string",
              "description": "The ID for the entity."
            }
          }
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this object."
        }
      }
    },
    "ObjectAccessControl": {
      "type": "object",
      "description": "An access-control entry.",
      "properties": {
        "bucket": {
          "type": "string",
          "description": "The name of the bucket."
        },
        "domain": {
          "type": "string",
          "description": "The domain associated with the entity, if any."
        },
        "email": {
          "type": "string",
          "description": "The email address associated with the entity, if any."
        },
        "entity": {
          "type": "string",
          "description": "The entity holding the permission, in one of the following forms: \n- user-userId \n- user-email \n- group-groupId \n- group-email \n- domain-domain \n- allUsers \n- allAuthenticatedUsers Examples: \n- The user liz@example.com would be user-liz@example.com. \n- The group example@googlegroups.com would be group-example@googlegroups.com. \n- To refer to all members of the Google Apps for Business domain example.com, the entity would be domain-example.com."
        },
        "entityId": {
          "type": "string",
          "description": "The ID for the entity, if any."
        },
        "id": {
          "type": "string",
          "description": "The ID of the access-control entry."
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For object access control entries, this is always storage#objectAccessControl.",
          "default": "storage#objectAccessControl"
        },
        "object": {
          "type": "string",
          "description": "The name of the object."
        },
        "role": {
          "type": "string",
          "description": "The access permission for the entity. Can be READER or OWNER."
        },
        "selfLink": {
          "type": "string",
          "description": "The link to this access-control entry."
        }
      }
    },
    "ObjectAccessControls": {
      "type": "object",
      "description": "An access-control list.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/ObjectAccessControl"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of object access control entries, this is always storage#objectAccessControls.",
          "default": "storage#objectAccessControls"
        }
      }
    },
    "Objects": {
      "type": "object",
      "description": "A list of objects.",
      "properties": {
        "items": {
          "type": "array",
          "description": "The list of items.",
          "items": {
            "$ref": "#/definitions/Object"
          }
        },
        "kind": {
          "type": "string",
          "description": "The kind of item this is. For lists of objects, this is always storage#objects.",
          "default": "storage#objects"
        },
        "nextPageToken": {
          "type": "string",
          "description": "The continuation token, used to page through large result sets. Provide this value in a subsequent request to return the next page of results."
        },
        "prefixes": {
          "type": "array",
          "description": "The list of prefixes of objects matching-but-not-listed up to and including the requested delimiter.",
          "items": {
            "type": "string"
          }
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "name": "alt",
      "in": "query",
      "description": "Data format for the response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json"
      ]
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "name": "key",
      "in": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "name": "oauth_token",
      "in": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "name": "prettyPrint",
      "in": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": true,
      "type": "boolean"
    },
    "quotaUser": {
      "name": "quotaUser",
      "in": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "type": "string"
    },
    "userIp": {
      "name": "userIp",
      "in": "query",
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "scopes": {
        "https://www.googleapis.com/auth/devstorage.full_control": "Manage your data and permissions in Google Cloud Storage",
        "https://www.googleapis.com/auth/devstorage.read_only": "View your data in Google Cloud Storage",
        "https://www.googleapis.com/auth/devstorage.read_write": "Manage your data in Google Cloud Storage"
      }
    }
  },
  "externalDocs": {
    "url": "https://developers.google.com/storage/docs/json_api/"
  }
}