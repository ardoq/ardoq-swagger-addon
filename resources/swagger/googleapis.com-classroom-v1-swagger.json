{
  "swagger": "2.0",
  "info": {
    "title": "Google Classroom API",
    "x-serviceName": "classroom",
    "description": "Google Classroom API",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "version": "v1",
    "x-providerName": "googleapis.com",
    "x-origin": {
      "format": "google",
      "version": "v1",
      "url": "https://www.googleapis.com/discovery/v1/apis/classroom/v1/rest"
    },
    "x-logo": "https://www.google.com/images/srpr/logo11w.png"
  },
  "host": "classroom.googleapis.com",
  "basePath": "/",
  "schemes": [
    "https"
  ],
  "paths": {
    "/v1/courses": {
      "post": {
        "description": "Creates a course. The user specified as the primary teacher in `primary_teacher_id` is the owner of the created course and added as a teacher. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create courses. * `NOT_FOUND` if the primary teacher is not a valid user. * `ALREADY_EXISTS` if an alias was specified and already exists.",
        "operationId": "classroom.courses.create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "get": {
        "description": "Returns a list of courses that the requesting user is permitted to view, restricted to those that match the request. This method returns the following error codes: * `INVALID_ARGUMENT` if the query argument is malformed. * `NOT_FOUND` if any users specified in the query arguments do not exist.",
        "operationId": "classroom.courses.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCoursesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "studentId",
            "in": "query",
            "description": "Restricts returned courses to those having a student with the specified identifier, or an alias that identifies a student. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "type": "string"
          },
          {
            "name": "teacherId",
            "in": "query",
            "description": "Restricts returned courses to those having a teacher with the specified identifier, or an alias that identifies a teacher. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.",
            "type": "integer"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "[nextPageToken][google.classroom.v1.ListCoursesResponse.next_page_token] value returned from a previous [list][google.classroom.v1.Courses.ListCourses] call, indicating that the subsequent page of results should be returned. The [list][google.classroom.v1.Courses.ListCourses] request must be identical to the one which resulted in this token.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses",
              "https://www.googleapis.com/auth/classroom.courses.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{id}": {
      "get": {
        "description": "Returns a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the requested course. * `NOT_FOUND` if no course exists with the requested ID.",
        "operationId": "classroom.courses.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the course to return. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses",
              "https://www.googleapis.com/auth/classroom.courses.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "put": {
        "description": "Updates a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course. * `NOT_FOUND` if no course exists with the requested ID.",
        "operationId": "classroom.courses.update",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the course to update. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "patch": {
        "description": "Updates one or more fields a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to modify the requested course. * `NOT_FOUND` if no course exists with the requested ID. * `INVALID_ARGUMENT` if invalid fields are specified in the update mask or if no update mask is supplied.",
        "operationId": "classroom.courses.patch",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the course to update. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          },
          {
            "name": "updateMask",
            "in": "query",
            "description": "Mask which identifies which fields on the course to update. This field is required to do an update. The update will fail if invalid fields are specified. Valid fields are listed below: * `name` * `section` * `descriptionHeading` * `description` * `room` * `courseState` When set in a query parameter, this should be specified as `updateMask=,,...`",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Course"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "delete": {
        "description": "Deletes a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested course. * `NOT_FOUND` if no course exists with the requested ID.",
        "operationId": "classroom.courses.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the course to delete. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/aliases": {
      "post": {
        "description": "Creates an alias to a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create the alias. * `NOT_FOUND` if the course does not exist. * `ALREADY_EXISTS` if the alias already exists.",
        "operationId": "classroom.courses.aliases.create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/CourseAlias"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "The identifier of the course to alias. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/CourseAlias"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "get": {
        "description": "Lists the aliases of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access the course. * `NOT_FOUND` if the course does not exist.",
        "operationId": "classroom.courses.aliases.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListCourseAliasesResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "The identifier of the course. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Maximum number of items to return. Zero or unspecified indicates that the server may assign a maximum. The server may return fewer than the specified number of results.",
            "type": "integer"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "[nextPageToken][google.classroom.v1.ListCourseAliasesResponse.next_page_token] value returned from a previous [list][google.classroom.v1.Courses.ListCourseAliases] call, indicating that the subsequent page of results should be returned. The [list][google.classroom.v1.Courses.ListCourseAliases] request must be identical to the one which resulted in this token.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses",
              "https://www.googleapis.com/auth/classroom.courses.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/aliases/{alias}": {
      "delete": {
        "description": "Deletes an alias of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to remove the alias. * `NOT_FOUND` if the alias does not exist.",
        "operationId": "classroom.courses.aliases.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "The identifier of the course whose alias should be deleted. This may either be the Classroom-assigned identifier or an [alias][google.classroom.v1.CourseAlias].",
            "required": true,
            "type": "string"
          },
          {
            "name": "alias",
            "in": "path",
            "description": "The alias to delete. This may not be the Classroom-assigned identifier.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.courses"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/teachers": {
      "post": {
        "description": "Creates a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create teachers in this course. * `NOT_FOUND` if the requested course ID does not exist. * `ALREADY_EXISTS` if the user is already a teacher or student in the course.",
        "operationId": "classroom.courses.teachers.create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "get": {
        "description": "Returns a list of teachers of this course that the requester is permitted to view. Fails with `NOT_FOUND` if the course does not exist.",
        "operationId": "classroom.courses.teachers.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListTeachersResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.",
            "type": "integer"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "[nextPageToken][google.classroom.v1.ListTeachersResponse.next_page_token] value returned from a previous [list][google.classroom.v1.Users.ListTeachers] call, indicating that the subsequent page of results should be returned. The [list][google.classroom.v1.Users.ListTeachers] request must be identical to the one which resulted in this token.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/teachers/{userId}": {
      "get": {
        "description": "Returns a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view teachers of this course. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist.",
        "operationId": "classroom.courses.teachers.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Teacher"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the teacher to return, or an alias the identifies the user. the following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "delete": {
        "description": "Deletes a teacher of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete teachers of this course. * `NOT_FOUND` if no teacher of this course has the requested ID or if the course does not exist. * `FAILED_PRECONDITION` if the requested ID belongs to the primary teacher of this course.",
        "operationId": "classroom.courses.teachers.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the teacher to delete, or an alias the identifies the user. the following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/students": {
      "post": {
        "description": "Adds a user as a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create students in this course. * `NOT_FOUND` if the requested course ID does not exist. * `ALREADY_EXISTS` if the user is already a student or student in the course.",
        "operationId": "classroom.courses.students.create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Identifier of the course to create the student in. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "enrollmentCode",
            "in": "query",
            "description": "Enrollment code of the course to create the student in. This is required if [userId][google.classroom.v1.Student.user_id] corresponds to the requesting user; this may be omitted if the requesting user has administrative permissions to create students for any user.",
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "get": {
        "description": "Returns a list of students of this course that the requester is permitted to view. Fails with `NOT_FOUND` if the course does not exist.",
        "operationId": "classroom.courses.students.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListStudentsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "Maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.",
            "type": "integer"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "[nextPageToken][google.classroom.v1.ListStudentsResponse.next_page_token] value returned from a previous [list][google.classroom.v1.Users.ListStudents] call, indicating that the subsequent page of results should be returned. The [list][google.classroom.v1.Users.ListStudents] request must be identical to the one which resulted in this token.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/courses/{courseId}/students/{userId}": {
      "get": {
        "description": "Returns a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view students of this course. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.",
        "operationId": "classroom.courses.students.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Student"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the student to return, or an alias the identifies the user. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "delete": {
        "description": "Deletes a student of a course. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete students of this course. * `NOT_FOUND` if no student of this course has the requested ID or if the course does not exist.",
        "operationId": "classroom.courses.students.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "courseId",
            "in": "path",
            "description": "Unique identifier of the course. This may either be the Classroom-assigned identifier or an alias.",
            "required": true,
            "type": "string"
          },
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the student to delete, or an alias the identifies the user. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "courses"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/invitations": {
      "post": {
        "description": "Creates a invitation. Only one invitation for a user and course may exist at a time. Delete and recreate an invitation to make changes. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to create invitations for this course. * `NOT_FOUND` if the course or the user does not exist. * `ALREADY_EXISTS` if an invitation for the specified user and course already exists.",
        "operationId": "classroom.invitations.create",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          }
        },
        "parameters": [
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "invitations"
        ]
      },
      "get": {
        "description": "Returns a list of invitations that the requesting user is permitted to view, restricted to those that match the request. *Note:* At least one of `user_id` or `course_id` must be supplied.",
        "operationId": "classroom.invitations.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/ListInvitationsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "query",
            "description": "Restricts returned invitations to those for a specific user. This may be the unique identifier for the user or an alias. The supported aliases are: * the e-mail address of the user * the string literal `\"me\"`, indicating the requesting user",
            "type": "string"
          },
          {
            "name": "courseId",
            "in": "query",
            "description": "Restricts returned invitations to those for a course with the specified identifier.",
            "type": "string"
          },
          {
            "name": "pageSize",
            "in": "query",
            "description": "The maximum number of items to return. Zero means no maximum. The server may return fewer than the specified number of results.",
            "type": "integer"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "[nextPageToken][google.classroom.v1.ListInvitationsRespnse.next_page_token] value returned from a previous [list][google.classroom.v1.Users.ListInvitations] call, indicating that the subsequent page of results should be returned. The [list][google.classroom.v1.Users.ListInvitations] request must be identical to the one which resulted in this token.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "invitations"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/invitations/{id}": {
      "get": {
        "description": "Returns a invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to view the requested invitation. * `NOT_FOUND` if no invitation exists with the requested ID.",
        "operationId": "classroom.invitations.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Invitation"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the invitation to return.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "invitations"
        ]
      },
      "delete": {
        "description": "Deletes a invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to delete the requested invitation. * `NOT_FOUND` if no invitation exists with the requested ID.",
        "operationId": "classroom.invitations.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the invitation to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "invitations"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/invitations/{id}:accept": {
      "post": {
        "description": "Accepts an invitation, removing it and adding the invited user to the teachers or students (as appropriate) of the specified course. Only the invited user may accept an invitation. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to accept the requested invitation. * `NOT_FOUND` if no invitation exists with the requested ID.",
        "operationId": "classroom.invitations.accept",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Empty"
            }
          }
        },
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identifier of the invitation to accept.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.rosters"
            ]
          }
        ],
        "tags": [
          "invitations"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    },
    "/v1/userProfiles/{userId}": {
      "get": {
        "description": "Returns a user profile. This method returns the following error codes: * `PERMISSION_DENIED` if the requesting user is not permitted to access this user profile. * `NOT_FOUND` if the profile does not exist.",
        "operationId": "classroom.userProfiles.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserProfile"
            }
          }
        },
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "Identifier of the profile to return, or an alias the identifies the user. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating the requesting user",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/classroom.profile.emails",
              "https://www.googleapis.com/auth/classroom.profile.photos",
              "https://www.googleapis.com/auth/classroom.rosters",
              "https://www.googleapis.com/auth/classroom.rosters.readonly"
            ]
          }
        ],
        "tags": [
          "userProfiles"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/access_token"
        },
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/bearer_token"
        },
        {
          "$ref": "#/parameters/callback"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/pp"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/upload_protocol"
        },
        {
          "$ref": "#/parameters/uploadType"
        },
        {
          "$ref": "#/parameters/$.xgafv"
        }
      ]
    }
  },
  "definitions": {
    "Course": {
      "type": "object",
      "description": "A Course in Classroom.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier for this course assigned by Classroom. You may optionally set this to an [alias string][google.classroom.v1.CourseAlias] as part of [creating a course][google.classroom.v1.Courses.CreateCourse], creating a corresponding alias. The `ID` cannot be updated after a course is created. Specifying this field in a course update mask will result in an error."
        },
        "name": {
          "type": "string",
          "description": "Name of the course. For example, \"10th Grade Biology\". This is required and must be between 1 and 750 characters and a valid UTF-8 string."
        },
        "section": {
          "type": "string",
          "description": "Section of the course For example, \"Period 2\". If set, this field must be a valid UTF-8 string and no longer than 2800 characters."
        },
        "descriptionHeading": {
          "type": "string",
          "description": "Optional heading for the description. For example, \"Welcome to 10th Grade Biology\" If set, this field must be a valid UTF-8 string and no longer than 3600 characters."
        },
        "description": {
          "type": "string",
          "description": "Optional description. For example, \"We'll be learning about about the structure of living creatures from a combination of textbooks, guest lectures, and lab work. Expect to be excited!\" If set, this field must be a valid UTF-8 string and no longer than 30,000 characters."
        },
        "room": {
          "type": "string",
          "description": "Optional room location. For example, \"301\" If set, this field must be a valid UTF-8 string and no longer than 650 characters."
        },
        "ownerId": {
          "type": "string",
          "description": "The identifier of the owner (and primary teacher) of a course. When specified as a parameter of CreateCourseRequest, this field is required. It may be the numeric identifier for the user, or an alias that identifies the owner. The following aliases are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user This must be set in a CreateRequest; specifying this field in a course update mask will result in an error."
        },
        "creationTime": {
          "type": "string",
          "description": "Creation time of the course. Specifying this field in a course update mask will result in an error. Read-only."
        },
        "updateTime": {
          "type": "string",
          "description": "Time of the most recent update to this course. Specifying this field in a course update mask will result in an error. Read-only."
        },
        "enrollmentCode": {
          "type": "string",
          "description": "Enrollment code to use when joining this course. Specifying this field in a course update mask will result in an error. Read-only."
        },
        "courseState": {
          "type": "string",
          "description": "State of the course. If unspecified, the default state will be `PROVISIONED`.",
          "enum": [
            "COURSE_STATE_UNSPECIFIED",
            "ACTIVE",
            "ARCHIVED",
            "PROVISIONED",
            "DECLINED"
          ]
        },
        "alternateLink": {
          "type": "string",
          "description": "Absolute link to this course in the Classroom web UI. Read-only."
        }
      }
    },
    "Empty": {
      "type": "object",
      "description": "A generic empty message that you can re-use to avoid defining duplicated empty messages in your APIs. A typical example is to use it as the request or the response type of an API method. For instance: service Foo { rpc Bar(google.protobuf.Empty) returns (google.protobuf.Empty); } The JSON representation for `Empty` is empty JSON object `{}`."
    },
    "ListCoursesResponse": {
      "type": "object",
      "description": "Response when listing courses.",
      "properties": {
        "courses": {
          "type": "array",
          "description": "Courses that match the request.",
          "items": {
            "$ref": "#/definitions/Course"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token identifying the next page of results to return. If empty, no further results are available."
        }
      }
    },
    "CourseAlias": {
      "type": "object",
      "description": "Alternative identifier for a course. An alias uniquely identifies a course. It will be unique within one of the following scopes: * domain: A domain-scoped alias is visible to all users within the alias creator's domain and may only be created by a domain admin. A domain-scoped alias is often used when a course has an identifier external to Classroom. * project: A project-scoped alias is visible to any request from an application using the Developer Console Project ID that created the alias and may be created by any project. A project-scoped alias is often used when an application has alternative identifiers. A random value can also be used to avoid duplicate courses in the event of transmission failures, as retrying a request will return ALREADY_EXISTS if a previous one has succeeded.",
      "properties": {
        "alias": {
          "type": "string",
          "description": "Alias string. The format of the string indicated the desired alias scoping. * \"d:\" indicates a domain-scoped alias. Example: d:math_101 * \"p:\" indicates a project-scoped alias. Example: p:abc123 This field has a maximum length of 256 characters."
        }
      }
    },
    "ListCourseAliasesResponse": {
      "type": "object",
      "description": "Response when listing course aliases.",
      "properties": {
        "aliases": {
          "type": "array",
          "description": "The course aliases.",
          "items": {
            "$ref": "#/definitions/CourseAlias"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token identifying the next page of results to return. If empty, no further results are available."
        }
      }
    },
    "Invitation": {
      "type": "object",
      "description": "An invitation to join a course.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier assigned by Classroom. Read-only"
        },
        "userId": {
          "type": "string",
          "description": "Identifier of the invited user. When specified as a parameter of a request, this may be set to an alias that identifies the user to invite. The supported aliases are: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user"
        },
        "courseId": {
          "type": "string",
          "description": "Identifier of the course to invite the user to."
        },
        "role": {
          "type": "string",
          "description": "Role to invite the user to have. Must not be `COURSE_ROLE_UNSPECIFIED`.",
          "enum": [
            "COURSE_ROLE_UNSPECIFIED",
            "STUDENT",
            "TEACHER"
          ]
        }
      }
    },
    "ListInvitationsResponse": {
      "type": "object",
      "description": "Response when listing invitations.",
      "properties": {
        "invitations": {
          "type": "array",
          "description": "Invitations that match the request.",
          "items": {
            "$ref": "#/definitions/Invitation"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token identifying the next page of results to return. If empty, no further results are available."
        }
      }
    },
    "UserProfile": {
      "type": "object",
      "description": "Global information for a user.",
      "properties": {
        "id": {
          "type": "string",
          "description": "Unique identifier of the user. Read-only"
        },
        "name": {
          "$ref": "#/definitions/Name",
          "description": "Name of the user. Read-only"
        },
        "emailAddress": {
          "type": "string",
          "description": "E-mail address of the user. Read-only"
        },
        "photoUrl": {
          "type": "string",
          "description": "Url of user's profile photo. Read-only"
        },
        "permissions": {
          "type": "array",
          "description": "Global permissions of the user. Read-only",
          "items": {
            "$ref": "#/definitions/GlobalPermission"
          }
        }
      }
    },
    "Name": {
      "type": "object",
      "description": "Details of the user's name.",
      "properties": {
        "givenName": {
          "type": "string",
          "description": "The user's first name. Read-only"
        },
        "familyName": {
          "type": "string",
          "description": "The user's last name. Read-only"
        },
        "fullName": {
          "type": "string",
          "description": "The user's full name formed by concatenating the first and last name values. Read-only"
        }
      }
    },
    "GlobalPermission": {
      "type": "object",
      "description": "Global user permission description.",
      "properties": {
        "permission": {
          "type": "string",
          "description": "Permission value.",
          "enum": [
            "PERMISSION_UNSPECIFIED",
            "CREATE_COURSE"
          ]
        }
      }
    },
    "Teacher": {
      "type": "object",
      "description": "Teacher of a course.",
      "properties": {
        "courseId": {
          "type": "string",
          "description": "Unique identifier of the course. Read-only"
        },
        "userId": {
          "type": "string",
          "description": "The identifier of the user. When specified as a parameter of request, this field may be set to an alias that identifies the teacher. The following are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating the requesting user"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile",
          "description": "Global user information for the teacher. Read-only"
        }
      }
    },
    "ListTeachersResponse": {
      "type": "object",
      "description": "Response when listing teachers.",
      "properties": {
        "teachers": {
          "type": "array",
          "description": "The teachers who match the list request.",
          "items": {
            "$ref": "#/definitions/Teacher"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token identifying the next page of results to return. If empty, no further results are available."
        }
      }
    },
    "Student": {
      "type": "object",
      "description": "Student in a course.",
      "properties": {
        "courseId": {
          "type": "string",
          "description": "Unique identifier of the course. Read-only"
        },
        "userId": {
          "type": "string",
          "description": "The identifier of the user. When specified as a parameter of request, this field may be set to an alias that identifies the student. The following are supported: * the e-mail address of the user * the string literal `\"me\"`, indicating that the requesting user"
        },
        "profile": {
          "$ref": "#/definitions/UserProfile",
          "description": "Global user information for the student. Read-only"
        }
      }
    },
    "ListStudentsResponse": {
      "type": "object",
      "description": "Response when listing students.",
      "properties": {
        "students": {
          "type": "array",
          "description": "The students who match the list request.",
          "items": {
            "$ref": "#/definitions/Student"
          }
        },
        "nextPageToken": {
          "type": "string",
          "description": "Token identifying the next page of results to return. If empty, no further results are available."
        }
      }
    }
  },
  "parameters": {
    "access_token": {
      "name": "access_token",
      "in": "query",
      "description": "OAuth access token.",
      "type": "string"
    },
    "alt": {
      "name": "alt",
      "in": "query",
      "description": "Data format for response.",
      "default": "json",
      "type": "string"
    },
    "bearer_token": {
      "name": "bearer_token",
      "in": "query",
      "description": "OAuth bearer token.",
      "type": "string"
    },
    "callback": {
      "name": "callback",
      "in": "query",
      "description": "JSONP",
      "type": "string"
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "name": "key",
      "in": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "name": "oauth_token",
      "in": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "pp": {
      "name": "pp",
      "in": "query",
      "description": "Pretty-print response.",
      "default": true,
      "type": "boolean"
    },
    "prettyPrint": {
      "name": "prettyPrint",
      "in": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": true,
      "type": "boolean"
    },
    "quotaUser": {
      "name": "quotaUser",
      "in": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters.",
      "type": "string"
    },
    "upload_protocol": {
      "name": "upload_protocol",
      "in": "query",
      "description": "Upload protocol for media (e.g. \"raw\", \"multipart\").",
      "type": "string"
    },
    "uploadType": {
      "name": "uploadType",
      "in": "query",
      "description": "Legacy upload protocol for media (e.g. \"media\", \"multipart\").",
      "type": "string"
    },
    "$.xgafv": {
      "name": "$.xgafv",
      "in": "query",
      "description": "V1 error format.",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "scopes": {
        "https://www.googleapis.com/auth/classroom.courses": "Manage your Google Classroom classes",
        "https://www.googleapis.com/auth/classroom.courses.readonly": "View your Google Classroom classes",
        "https://www.googleapis.com/auth/classroom.profile.emails": "View the email addresses of people in your classes",
        "https://www.googleapis.com/auth/classroom.profile.photos": "View the profile photos of people in your classes",
        "https://www.googleapis.com/auth/classroom.rosters": "Manage your Google Classroom class rosters",
        "https://www.googleapis.com/auth/classroom.rosters.readonly": "View your Google Classroom class rosters"
      }
    }
  }
}