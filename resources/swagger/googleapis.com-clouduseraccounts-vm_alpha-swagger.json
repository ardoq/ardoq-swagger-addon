{
  "swagger": "2.0",
  "info": {
    "title": "Cloud User Accounts API",
    "x-serviceName": "clouduseraccounts",
    "description": "API for the Google Cloud User Accounts service.",
    "contact": {
      "name": "Google",
      "url": "https://google.com"
    },
    "version": "vm_alpha",
    "x-providerName": "googleapis.com",
    "x-origin": {
      "format": "google",
      "version": "v1",
      "url": "https://www.googleapis.com/discovery/v1/apis/clouduseraccounts/vm_alpha/rest"
    },
    "x-logo": "https://www.google.com/images/srpr/logo11w.png"
  },
  "host": "www.googleapis.com",
  "basePath": "/clouduseraccounts/vm_alpha/projects",
  "schemes": [
    "https"
  ],
  "paths": {
    "/{project}/global/operations/{operation}": {
      "delete": {
        "description": "Deletes the specified operation resource.",
        "operationId": "clouduseraccounts.globalAccountsOperations.delete",
        "responses": {
          "200": {
            "description": "Successful response"
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operation",
            "in": "path",
            "description": "Name of the Operations resource to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "globalAccountsOperations"
        ]
      },
      "get": {
        "description": "Retrieves the specified operation resource.",
        "operationId": "clouduseraccounts.globalAccountsOperations.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "operation",
            "in": "path",
            "description": "Name of the Operations resource to return.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "globalAccountsOperations"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/operations": {
      "get": {
        "description": "Retrieves the list of operation resources contained within the specified project.",
        "operationId": "clouduseraccounts.globalAccountsOperations.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/OperationList"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must contain the following:\nFIELD_NAME COMPARISON_STRING LITERAL_STRING\n \n- FIELD_NAME: The name of the field you want to compare. The field name must be valid for the type of resource being filtered. Only atomic field types are supported (string, number, boolean). Array and object fields are not currently supported. \n- COMPARISON_STRING: The comparison string, either eq (equals) or ne (not equals). \n- LITERAL_STRING: The literal string value to filter to. The literal value must be valid for the type of field (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.  For example, you can filter by the name of a resource:\nfilter=name ne example-instance\nThe above filter returns only results whose name field does not equal example-instance. You can also enclose your literal string in single, double, or no quotes.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum count of results to be returned.",
            "default": 500,
            "type": "integer",
            "minimum": 0,
            "maximum": 500
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.\n\nYou can also sort results in descending order based on the creation timestamp using orderBy=\"creationTimestamp desc\". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.\n\nCurrently, only sorting by name or creationTimestamp desc is supported.",
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Specifies a page token to use. Use this parameter if you want to list the next page of results. Set pageToken to the nextPageToken returned by a previous list request.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "globalAccountsOperations"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/groups/{groupName}/addMember": {
      "post": {
        "description": "Adds users to the specified group.",
        "operationId": "clouduseraccounts.groups.addMember",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "Name of the group for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GroupsAddMemberRequest"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/groups/{groupName}": {
      "delete": {
        "description": "Deletes the specified Group resource.",
        "operationId": "clouduseraccounts.groups.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "Name of the Group resource to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "get": {
        "description": "Returns the specified Group resource.",
        "operationId": "clouduseraccounts.groups.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "Name of the Group resource to return.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/groups": {
      "post": {
        "description": "Creates a Group resource in the specified project using the data included in the request.",
        "operationId": "clouduseraccounts.groups.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/Group"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "get": {
        "description": "Retrieves the list of groups contained within the specified project.",
        "operationId": "clouduseraccounts.groups.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/GroupList"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must contain the following:\nFIELD_NAME COMPARISON_STRING LITERAL_STRING\n \n- FIELD_NAME: The name of the field you want to compare. The field name must be valid for the type of resource being filtered. Only atomic field types are supported (string, number, boolean). Array and object fields are not currently supported. \n- COMPARISON_STRING: The comparison string, either eq (equals) or ne (not equals). \n- LITERAL_STRING: The literal string value to filter to. The literal value must be valid for the type of field (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.  For example, you can filter by the name of a resource:\nfilter=name ne example-instance\nThe above filter returns only results whose name field does not equal example-instance. You can also enclose your literal string in single, double, or no quotes.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum count of results to be returned.",
            "default": 500,
            "type": "integer",
            "minimum": 0,
            "maximum": 500
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.\n\nYou can also sort results in descending order based on the creation timestamp using orderBy=\"creationTimestamp desc\". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.\n\nCurrently, only sorting by name or creationTimestamp desc is supported.",
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Specifies a page token to use. Use this parameter if you want to list the next page of results. Set pageToken to the nextPageToken returned by a previous list request.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/groups/{groupName}/removeMember": {
      "post": {
        "description": "Removes users from the specified group.",
        "operationId": "clouduseraccounts.groups.removeMember",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "groupName",
            "in": "path",
            "description": "Name of the group for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/GroupsRemoveMemberRequest"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "groups"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/zones/{zone}/authorizedKeysView/{user}": {
      "post": {
        "description": "Returns a list of authorized public keys for a specific user account.",
        "operationId": "clouduseraccounts.linux.getAuthorizedKeysView",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LinuxGetAuthorizedKeysViewResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "zone",
            "in": "path",
            "description": "Name of the zone for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "path",
            "description": "The user account for which you want to get a list of authorized public keys.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "query",
            "description": "The fully-qualified URL of the virtual machine requesting the view.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "linux"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/zones/{zone}/linuxAccountViews": {
      "post": {
        "description": "Retrieves a list of user accounts for an instance within a specific project.",
        "operationId": "clouduseraccounts.linux.getLinuxAccountViews",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/LinuxGetLinuxAccountViewsResponse"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "zone",
            "in": "path",
            "description": "Name of the zone for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "instance",
            "in": "query",
            "description": "The fully-qualified URL of the virtual machine requesting the views.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must contain the following:\nFIELD_NAME COMPARISON_STRING LITERAL_STRING\n \n- FIELD_NAME: The name of the field you want to compare. The field name must be valid for the type of resource being filtered. Only atomic field types are supported (string, number, boolean). Array and object fields are not currently supported. \n- COMPARISON_STRING: The comparison string, either eq (equals) or ne (not equals). \n- LITERAL_STRING: The literal string value to filter to. The literal value must be valid for the type of field (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.  For example, you can filter by the name of a resource:\nfilter=name ne example-instance\nThe above filter returns only results whose name field does not equal example-instance. You can also enclose your literal string in single, double, or no quotes.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum count of results to be returned.",
            "default": 500,
            "type": "integer",
            "minimum": 0,
            "maximum": 500
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.\n\nYou can also sort results in descending order based on the creation timestamp using orderBy=\"creationTimestamp desc\". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.\n\nCurrently, only sorting by name or creationTimestamp desc is supported.",
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Specifies a page token to use. Use this parameter if you want to list the next page of results. Set pageToken to the nextPageToken returned by a previous list request.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "linux"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/users/{user}/addPublicKey": {
      "post": {
        "description": "Adds a public key to the specified User resource with the data included in the request.",
        "operationId": "clouduseraccounts.users.addPublicKey",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Name of the user for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/PublicKey"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/users/{user}": {
      "delete": {
        "description": "Deletes the specified User resource.",
        "operationId": "clouduseraccounts.users.delete",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Name of the user resource to delete.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "get": {
        "description": "Returns the specified User resource.",
        "operationId": "clouduseraccounts.users.get",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Name of the user resource to return.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/users": {
      "post": {
        "description": "Creates a User resource in the specified project using the data included in the request.",
        "operationId": "clouduseraccounts.users.insert",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "body",
            "in": "body",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "get": {
        "description": "Retrieves a list of users contained within the specified project.",
        "operationId": "clouduseraccounts.users.list",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/UserList"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "filter",
            "in": "query",
            "description": "Sets a filter expression for filtering listed resources, in the form filter={expression}. Your {expression} must contain the following:\nFIELD_NAME COMPARISON_STRING LITERAL_STRING\n \n- FIELD_NAME: The name of the field you want to compare. The field name must be valid for the type of resource being filtered. Only atomic field types are supported (string, number, boolean). Array and object fields are not currently supported. \n- COMPARISON_STRING: The comparison string, either eq (equals) or ne (not equals). \n- LITERAL_STRING: The literal string value to filter to. The literal value must be valid for the type of field (string, number, boolean). For string fields, the literal value is interpreted as a regular expression using RE2 syntax. The literal value must match the entire field.  For example, you can filter by the name of a resource:\nfilter=name ne example-instance\nThe above filter returns only results whose name field does not equal example-instance. You can also enclose your literal string in single, double, or no quotes.",
            "type": "string"
          },
          {
            "name": "maxResults",
            "in": "query",
            "description": "Maximum count of results to be returned.",
            "default": 500,
            "type": "integer",
            "minimum": 0,
            "maximum": 500
          },
          {
            "name": "orderBy",
            "in": "query",
            "description": "Sorts list results by a certain order. By default, results are returned in alphanumerical order based on the resource name.\n\nYou can also sort results in descending order based on the creation timestamp using orderBy=\"creationTimestamp desc\". This sorts results based on the creationTimestamp field in reverse chronological order (newest result first). Use this to sort resources like operations so that the newest operation is returned first.\n\nCurrently, only sorting by name or creationTimestamp desc is supported.",
            "type": "string"
          },
          {
            "name": "pageToken",
            "in": "query",
            "description": "Specifies a page token to use. Use this parameter if you want to list the next page of results. Set pageToken to the nextPageToken returned by a previous list request.",
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/cloud.useraccounts.readonly",
              "https://www.googleapis.com/auth/computeaccounts",
              "https://www.googleapis.com/auth/computeaccounts.readonly"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    },
    "/{project}/global/users/{user}/removePublicKey": {
      "post": {
        "description": "Removes the specified public key from the user.",
        "operationId": "clouduseraccounts.users.removePublicKey",
        "responses": {
          "200": {
            "description": "Successful response",
            "schema": {
              "$ref": "#/definitions/Operation"
            }
          }
        },
        "parameters": [
          {
            "name": "project",
            "in": "path",
            "description": "Project ID for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "user",
            "in": "path",
            "description": "Name of the user for this request.",
            "required": true,
            "type": "string"
          },
          {
            "name": "fingerprint",
            "in": "query",
            "description": "The fingerprint of the public key to delete. Public keys are identified by their fingerprint, which is defined by RFC4716 to be the MD5 digest of the public key.",
            "required": true,
            "type": "string"
          }
        ],
        "security": [
          {
            "Oauth2": [
              "https://www.googleapis.com/auth/cloud-platform",
              "https://www.googleapis.com/auth/cloud.useraccounts",
              "https://www.googleapis.com/auth/computeaccounts"
            ]
          }
        ],
        "tags": [
          "users"
        ]
      },
      "parameters": [
        {
          "$ref": "#/parameters/alt"
        },
        {
          "$ref": "#/parameters/fields"
        },
        {
          "$ref": "#/parameters/key"
        },
        {
          "$ref": "#/parameters/oauth_token"
        },
        {
          "$ref": "#/parameters/prettyPrint"
        },
        {
          "$ref": "#/parameters/quotaUser"
        },
        {
          "$ref": "#/parameters/userIp"
        }
      ]
    }
  },
  "definitions": {
    "AuthorizedKeysView": {
      "type": "object",
      "description": "A list of authorized public keys for a user account.",
      "properties": {
        "keys": {
          "type": "array",
          "description": "[Output Only] The list of authorized public keys in SSH format.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "Group": {
      "type": "object",
      "description": "A Group resource.",
      "properties": {
        "creationTimestamp": {
          "type": "string",
          "description": "[Output Only] Creation timestamp in RFC3339 text format."
        },
        "description": {
          "type": "string",
          "description": "An optional textual description of the resource; provided by the client when the resource is created."
        },
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server.",
          "format": "uint64"
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of the resource. Always clouduseraccounts#group for groups.",
          "default": "clouduseraccounts#group"
        },
        "members": {
          "type": "array",
          "description": "[Output Only] A list of URLs to User resources who belong to the group. Users may only be members of groups in the same project.",
          "items": {
            "type": "string"
          }
        },
        "name": {
          "type": "string",
          "description": "Name of the resource; provided by the client when the resource is created.",
          "pattern": "[a-z][-a-z0-9_]{0,31}"
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for the resource."
        }
      }
    },
    "GroupList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server."
        },
        "items": {
          "type": "array",
          "description": "[Output Only] A list of Group resources.",
          "items": {
            "$ref": "#/definitions/Group"
          }
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of resource. Always clouduseraccounts#groupList for lists of groups.",
          "default": "clouduseraccounts#groupList"
        },
        "nextPageToken": {
          "type": "string",
          "description": "[Output Only] A token used to continue a truncated list request."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for this resource."
        }
      }
    },
    "GroupsAddMemberRequest": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "description": "Fully-qualified URLs of the User resources to add.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "GroupsRemoveMemberRequest": {
      "type": "object",
      "properties": {
        "users": {
          "type": "array",
          "description": "Fully-qualified URLs of the User resources to remove.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LinuxAccountViews": {
      "type": "object",
      "description": "A list of all Linux accounts for this project. This API is only used by Compute Engine virtual machines to get information about user accounts for a project or instance. Linux resources are read-only views into users and groups managed by the Compute Engine Accounts API.",
      "properties": {
        "groupViews": {
          "type": "array",
          "description": "[Output Only] A list of all groups within a project.",
          "items": {
            "$ref": "#/definitions/LinuxGroupView"
          }
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of the resource. Always clouduseraccounts#linuxAccountViews for Linux resources.",
          "default": "clouduseraccounts#linuxAccountViews"
        },
        "userViews": {
          "type": "array",
          "description": "[Output Only] A list of all users within a project.",
          "items": {
            "$ref": "#/definitions/LinuxUserView"
          }
        }
      }
    },
    "LinuxGetAuthorizedKeysViewResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/AuthorizedKeysView",
          "description": "[Output Only] A list of authorized public keys for a user."
        }
      }
    },
    "LinuxGetLinuxAccountViewsResponse": {
      "type": "object",
      "properties": {
        "resource": {
          "$ref": "#/definitions/LinuxAccountViews",
          "description": "[Output Only] A list of authorized user accounts and groups."
        }
      }
    },
    "LinuxGroupView": {
      "type": "object",
      "description": "A detailed view of a Linux group.",
      "properties": {
        "gid": {
          "type": "integer",
          "description": "[Output Only] The Group ID.",
          "format": "uint32"
        },
        "groupName": {
          "type": "string",
          "description": "[Output Only] Group name."
        },
        "members": {
          "type": "array",
          "description": "[Output Only] List of user accounts that belong to the group.",
          "items": {
            "type": "string"
          }
        }
      }
    },
    "LinuxUserView": {
      "type": "object",
      "description": "A detailed view of a Linux user account.",
      "properties": {
        "gecos": {
          "type": "string",
          "description": "[Output Only] The GECOS (user information) entry for this account."
        },
        "gid": {
          "type": "integer",
          "description": "[Output Only] User's default group ID.",
          "format": "uint32"
        },
        "homeDirectory": {
          "type": "string",
          "description": "[Output Only] The path to the home directory for this account."
        },
        "shell": {
          "type": "string",
          "description": "[Output Only] The path to the login shell for this account."
        },
        "uid": {
          "type": "integer",
          "description": "[Output Only] User ID.",
          "format": "uint32"
        },
        "username": {
          "type": "string",
          "description": "[Output Only] The username of the account."
        }
      }
    },
    "Operation": {
      "type": "object",
      "description": "An Operation resource, used to manage asynchronous API requests.",
      "properties": {
        "clientOperationId": {
          "type": "string",
          "description": "[Output Only] An optional identifier specified by the client when the mutation was initiated. Must be unique for all Operation resources in the project."
        },
        "creationTimestamp": {
          "type": "string",
          "description": "[Output Only] Creation timestamp in RFC3339 text format."
        },
        "endTime": {
          "type": "string",
          "description": "[Output Only] The time that this operation was completed. This is in RFC3339 text format."
        },
        "error": {
          "type": "object",
          "description": "[Output Only] If errors are generated during processing of the operation, this field will be populated.",
          "properties": {
            "errors": {
              "type": "array",
              "description": "[Output Only] The array of errors encountered while processing this operation.",
              "items": {
                "type": "object",
                "properties": {
                  "code": {
                    "type": "string",
                    "description": "[Output Only] The error type identifier for this error."
                  },
                  "location": {
                    "type": "string",
                    "description": "[Output Only] Indicates the field in the request which caused the error. This property is optional."
                  },
                  "message": {
                    "type": "string",
                    "description": "[Output Only] An optional, human-readable error message."
                  }
                }
              }
            }
          }
        },
        "httpErrorMessage": {
          "type": "string",
          "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as NOT FOUND."
        },
        "httpErrorStatusCode": {
          "type": "integer",
          "description": "[Output Only] If the operation fails, this field contains the HTTP error message that was returned, such as 404.",
          "format": "int32"
        },
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server.",
          "format": "uint64"
        },
        "insertTime": {
          "type": "string",
          "description": "[Output Only] The time that this operation was requested. This is in RFC3339 text format."
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of the resource. Always compute#Operation for Operation resources.",
          "default": "clouduseraccounts#operation"
        },
        "name": {
          "type": "string",
          "description": "[Output Only] Name of the resource."
        },
        "operationType": {
          "type": "string",
          "description": "[Output Only] Type of the operation, such as insert, update, and delete."
        },
        "progress": {
          "type": "integer",
          "description": "[Output Only] An optional progress indicator that ranges from 0 to 100. There is no requirement that this be linear or support any granularity of operations. This should not be used to guess at when the operation will be complete. This number should monotonically increase as the operation progresses.",
          "format": "int32"
        },
        "region": {
          "type": "string",
          "description": "[Output Only] URL of the region where the operation resides. Only applicable for regional resources."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for the resource."
        },
        "startTime": {
          "type": "string",
          "description": "[Output Only] The time that this operation was started by the server. This is in RFC3339 text format."
        },
        "status": {
          "type": "string",
          "description": "[Output Only] Status of the operation. Can be one of the following: PENDING, RUNNING, or DONE.",
          "enum": [
            "DONE",
            "PENDING",
            "RUNNING"
          ]
        },
        "statusMessage": {
          "type": "string",
          "description": "[Output Only] An optional textual description of the current status of the operation."
        },
        "targetId": {
          "type": "string",
          "description": "[Output Only] Unique target ID which identifies a particular incarnation of the target.",
          "format": "uint64"
        },
        "targetLink": {
          "type": "string",
          "description": "[Output Only] URL of the resource the operation is mutating."
        },
        "user": {
          "type": "string",
          "description": "[Output Only] User who requested the operation, for example: user@example.com."
        },
        "warnings": {
          "type": "array",
          "description": "[Output Only] If warning messages are generated during processing of the operation, this field will be populated.",
          "items": {
            "type": "object",
            "properties": {
              "code": {
                "type": "string",
                "description": "[Output Only] The warning type identifier for this warning.",
                "enum": [
                  "DEPRECATED_RESOURCE_USED",
                  "DISK_SIZE_LARGER_THAN_IMAGE_SIZE",
                  "INJECTED_KERNELS_DEPRECATED",
                  "NEXT_HOP_ADDRESS_NOT_ASSIGNED",
                  "NEXT_HOP_CANNOT_IP_FORWARD",
                  "NEXT_HOP_INSTANCE_NOT_FOUND",
                  "NEXT_HOP_INSTANCE_NOT_ON_NETWORK",
                  "NEXT_HOP_NOT_RUNNING",
                  "NOT_CRITICAL_ERROR",
                  "NO_RESULTS_ON_PAGE",
                  "REQUIRED_TOS_AGREEMENT",
                  "RESOURCE_NOT_DELETED",
                  "SINGLE_INSTANCE_PROPERTY_TEMPLATE",
                  "UNREACHABLE"
                ]
              },
              "data": {
                "type": "array",
                "description": "[Output Only] Metadata for this warning in key: value format.",
                "items": {
                  "type": "object",
                  "properties": {
                    "key": {
                      "type": "string",
                      "description": "[Output Only] A key for the warning data."
                    },
                    "value": {
                      "type": "string",
                      "description": "[Output Only] A warning data value corresponding to the key."
                    }
                  }
                }
              },
              "message": {
                "type": "string",
                "description": "[Output Only] Optional human-readable details for this warning."
              }
            }
          }
        },
        "zone": {
          "type": "string",
          "description": "[Output Only] URL of the zone where the operation resides."
        }
      }
    },
    "OperationList": {
      "type": "object",
      "description": "Contains a list of Operation resources.",
      "properties": {
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server."
        },
        "items": {
          "type": "array",
          "description": "[Output Only] The Operation resources.",
          "items": {
            "$ref": "#/definitions/Operation"
          }
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of resource. Always compute#operations for Operations resource.",
          "default": "clouduseraccounts#operationList"
        },
        "nextPageToken": {
          "type": "string",
          "description": "[Output Only] A token used to continue a truncate."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for this resource."
        }
      }
    },
    "PublicKey": {
      "type": "object",
      "description": "A public key for authenticating to guests.",
      "properties": {
        "creationTimestamp": {
          "type": "string",
          "description": "[Output Only] Creation timestamp in RFC3339 text format."
        },
        "description": {
          "type": "string",
          "description": "An optional textual description of the resource; provided by the client when the resource is created."
        },
        "expirationTimestamp": {
          "type": "string",
          "description": "Optional expiration timestamp. If provided, the timestamp must be in RFC3339 text format. If not provided, the public key never expires."
        },
        "fingerprint": {
          "type": "string",
          "description": "[Output Only] The fingerprint of the key is defined by RFC4716 to be the MD5 digest of the public key."
        },
        "key": {
          "type": "string",
          "description": "Public key text in SSH format, defined by RFC4253 section 6.6."
        }
      }
    },
    "User": {
      "type": "object",
      "description": "A User resource.",
      "properties": {
        "creationTimestamp": {
          "type": "string",
          "description": "[Output Only] Creation timestamp in RFC3339 text format."
        },
        "description": {
          "type": "string",
          "description": "An optional textual description of the resource; provided by the client when the resource is created."
        },
        "groups": {
          "type": "array",
          "description": "[Output Only] A list of URLs to Group resources who contain the user. Users are only members of groups in the same project.",
          "items": {
            "type": "string"
          }
        },
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server.",
          "format": "uint64"
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of the resource. Always clouduseraccounts#user for users.",
          "default": "clouduseraccounts#user"
        },
        "name": {
          "type": "string",
          "description": "Name of the resource; provided by the client when the resource is created.",
          "pattern": "[a-z][-a-z0-9_]{0,31}"
        },
        "owner": {
          "type": "string",
          "description": "Email address of account's owner. This account will be validated to make sure it exists. The email can belong to any domain, but it must be tied to a Google account."
        },
        "publicKeys": {
          "type": "array",
          "description": "[Output Only] Public keys that this user may use to login.",
          "items": {
            "$ref": "#/definitions/PublicKey"
          }
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for the resource."
        }
      }
    },
    "UserList": {
      "type": "object",
      "properties": {
        "id": {
          "type": "string",
          "description": "[Output Only] Unique identifier for the resource; defined by the server."
        },
        "items": {
          "type": "array",
          "description": "[Output Only] A list of User resources.",
          "items": {
            "$ref": "#/definitions/User"
          }
        },
        "kind": {
          "type": "string",
          "description": "[Output Only] Type of resource. Always clouduseraccounts#userList for lists of users.",
          "default": "clouduseraccounts#userList"
        },
        "nextPageToken": {
          "type": "string",
          "description": "[Output Only] A token used to continue a truncated list request."
        },
        "selfLink": {
          "type": "string",
          "description": "[Output Only] Server defined URL for this resource."
        }
      }
    }
  },
  "parameters": {
    "alt": {
      "name": "alt",
      "in": "query",
      "description": "Data format for the response.",
      "default": "json",
      "type": "string",
      "enum": [
        "json"
      ]
    },
    "fields": {
      "name": "fields",
      "in": "query",
      "description": "Selector specifying which fields to include in a partial response.",
      "type": "string"
    },
    "key": {
      "name": "key",
      "in": "query",
      "description": "API key. Your API key identifies your project and provides you with API access, quota, and reports. Required unless you provide an OAuth 2.0 token.",
      "type": "string"
    },
    "oauth_token": {
      "name": "oauth_token",
      "in": "query",
      "description": "OAuth 2.0 token for the current user.",
      "type": "string"
    },
    "prettyPrint": {
      "name": "prettyPrint",
      "in": "query",
      "description": "Returns response with indentations and line breaks.",
      "default": true,
      "type": "boolean"
    },
    "quotaUser": {
      "name": "quotaUser",
      "in": "query",
      "description": "Available to use for quota purposes for server-side applications. Can be any arbitrary string assigned to a user, but should not exceed 40 characters. Overrides userIp if both are provided.",
      "type": "string"
    },
    "userIp": {
      "name": "userIp",
      "in": "query",
      "description": "IP address of the site where the request originates. Use this if you want to enforce per-user limits.",
      "type": "string"
    }
  },
  "securityDefinitions": {
    "Oauth2": {
      "type": "oauth2",
      "description": "Oauth 2.0 authentication",
      "flow": "implicit",
      "authorizationUrl": "https://accounts.google.com/o/oauth2/auth",
      "scopes": {
        "https://www.googleapis.com/auth/cloud-platform": "View and manage your data across Google Cloud Platform services",
        "https://www.googleapis.com/auth/cloud.useraccounts": "Manage your Google Cloud User Accounts",
        "https://www.googleapis.com/auth/cloud.useraccounts.readonly": "View your Google Cloud User Accounts",
        "https://www.googleapis.com/auth/computeaccounts": "Manage your Google Compute Accounts",
        "https://www.googleapis.com/auth/computeaccounts.readonly": "View your Google Compute Accounts"
      }
    }
  },
  "externalDocs": {
    "url": "https://cloud.google.com/compute/docs/access/user-accounts/api/latest/"
  }
}