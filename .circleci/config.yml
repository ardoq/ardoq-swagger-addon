version: 2.1

orbs:
  ardoq: ardoq/orby@0.2

filter-master: &filter-master
  branches:
    only:
      - master

filter-test-internal-env: &filter-test-internal-env
  branches:
    only:
      - test
      - /internal-env-.*/

jobs:
  test:
    docker:
      - image: circleci/clojure:lein-2.7.1
    parallelism: 1
    steps:
         - checkout
         - restore_cache:
               keys:
                 - ardoq-api-v1-{{ checksum "project.clj" }}
                 - ardoq-api-v1-
         - run: lein deps
         - save_cache:
               key: ardoq-api-v1-{{ checksum "project.clj" }}
               paths:
                   - ~/.m2
         - run:
            name: Run tests
            command: .circleci/maybe-run.sh '.circleci/test.sh'
         - store_test_results:
             path: target/test2junit

  uberjar:
    docker:
      - image: circleci/clojure:lein-2.7.1
    working_directory: ~/workspace
    steps:
        - checkout
        - attach_workspace:
            at: ~/workspace
        - run:
            name: Create uberjar
            command: lein uberjar
        - persist_to_workspace:
              paths: target
              root: .

  deploy-docker:
    docker:
      - image: ardoq/ci-docker:0.1
    working_directory: ~/workspace
    steps:
      - setup_remote_docker
      - checkout
      - attach_workspace:
          at: ~/workspace
      - run:
          command: ls -A
      - run:
          command: .circleci/deploy-docker.sh

  deploy-aws:
    docker:
      - image: garland/aws-cli-docker:0.2
    steps:
      - checkout
      - run:
          command: ls -la
      - run:
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ]; then
                 .circleci/deploy-aws.sh
            fi

workflows:
    version: 2
    build-test-and-deploy:
      jobs:
        - test
        - uberjar
        - deploy-docker:
            requires: [test, uberjar]
            filters:
              branches:
                only: [master, test, /internal-env-.*/]
        - deploy-aws:
            requires:
              - deploy-docker
        - ardoq/update-helm-app-version:
            name: update-helm-master
            requires: [deploy-docker]
            filters: *filter-master
            helm-chart-branch: master
            required-release-tag: '[ci deploy]'
            ssh-key-fingerprint: '26:9b:0f:9b:2d:89:ad:72:16:97:d0:3f:e6:01:0f:84'
            project: 'ardoq-swagger-addon'
            appversion: $(grep \"version\" package.json | cut -c 15- | rev | cut -c 3- | rev)-${CIRCLE_SHA1:0:7}
        - ardoq/update-helm-app-version:
            name: update-helm-test
            requires: [deploy-docker]
            filters: *filter-test-internal-env
            helm-chart-branch: ${CIRCLE_BRANCH}
            ssh-key-fingerprint: '26:9b:0f:9b:2d:89:ad:72:16:97:d0:3f:e6:01:0f:84'
            project: 'ardoq-swagger-addon'
            appversion: $(grep \"version\" package.json | cut -c 15- | rev | cut -c 3- | rev)-${CIRCLE_SHA1:0:7}
